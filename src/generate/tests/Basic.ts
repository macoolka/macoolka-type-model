/**
 * Code generated by github.com/macoolka/macoolka-gen-model, DO NOT EDIT.
 */
export interface NonEmptyArray<A> extends Array<A> {
  0: A
}

export type MaybeArray<A> = A | Array<A>

/**
 * @since 0.2.0
 */
/**
 * @since 0.2.0
 */
export type City = 'A' | 'B' | 'C'
/**
 * @since 0.2.0
 */
export type Empty = never
/**
 * @since 0.2.0
 */
export interface T1 {
  /**
   * @since 0.2.0
   */
  name1: string
}
/**
 * @since 0.2.0
 */
export interface T2 {
  /**
   * @since 0.2.0
   */
  name2?: string
}
/**
 * @since 0.2.0
 */
export interface Basic extends T1, T2 {
  /**
   * @since 0.2.0
   */
  id: string
  /**
   * @since 0.2.0
   */
  string: string
  /**
   * @since 0.2.0
   */
  number?: number
  /**
   * @since 0.2.0
   */
  date?: Date
  /**
   * @since 0.2.0
   */
  int?: number
  /**
   * @since 0.2.0
   */
  boolean?: boolean
  /**
   * @since 0.2.0
   */
  json1?: Record<string, any>
  /**
   * @since 0.2.0
   */
  string_kind?: string
  /**
   * @since 0.2.0
   */
  number_kind?: number
  /**
   * @since 0.2.0
   */
  int_kind?: number
  /**
   * @since 0.2.0
   */
  datetime_kind?: Date
  /**
   * @since 0.2.0
   */
  json_kind?: Record<string, any>
  /**
   * @since 0.2.0
   */
  boolean_kind?: boolean
  /**
   * @since 0.2.0
   */
  enum_kind?: 'a' | 'b'
  /**
   * @since 0.2.0
   */
  enum_t_kind?: City
  /**
   * @since 0.2.0
   */
  kind_kind?: 'k'
  /**
   * @since 0.2.0
   */
  type_kind?: T1
  /**
   * @since 0.2.0
   */
  typeUnion_kind?: T1 | T2
  /**
   * @since 0.2.0
   */
  maybeArray?: MaybeArray<string>
  /**
   * @since 0.2.0
   */
  add: (
    /**
     * @since 0.2.0
     */
    string: string,
    /**
     * @since 0.2.0
     */
    number?: number,
    /**
     * @since 0.2.0
     */
    date?: Date,
    /**
     * @since 0.2.0
     */
    int?: number,
    /**
     * @since 0.2.0
     */
    boolean?: boolean,
    /**
     * @since 0.2.0
     */
    json1?: Record<string, any>,
    /**
     * @since 0.2.0
     */
    string_kind?: string,
    /**
     * @since 0.2.0
     */
    number_kind?: number,
    /**
     * @since 0.2.0
     */
    int_kind?: number,
    /**
     * @since 0.2.0
     */
    datetime_kind?: Date,
    /**
     * @since 0.2.0
     */
    json_kind?: Record<string, any>,
    /**
     * @since 0.2.0
     */
    boolean_kind?: boolean,
    /**
     * @since 0.2.0
     */
    enum_kind?: 'a' | 'b',
    /**
     * @since 0.2.0
     */
    enum_t_kind?: City,
    /**
     * @since 0.2.0
     */
    kind_kind?: 'k',
    /**
     * @since 0.2.0
     */
    type_kind?: T1,
    /**
     * @since 0.2.0
     */
    typeUnion_kind?: T1 | T2
  ) => void
}
