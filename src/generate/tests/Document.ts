/**
 * Code generated by github.com/macoolka/macoolka-gen-model, DO NOT EDIT.
 */
export interface NonEmptyArray<A> extends Array<A> {
  0: A
}

export type MaybeArray<A> = A | Array<A>

/**
 * @since 0.2.0
 */
/**
 * @since 0.2.0
 */
export interface Documentable {
  /**
   * @since 0.2.0
   */
  name: string
  /**
   * @since 0.2.0
   */
  description?: string
  /**
   * @since 0.2.0
   */
  since: string
  /**
   * @since 0.2.0
   */
  deprecated: boolean
  /**
   * @since 0.2.0
   */
  examples: Array<boolean>
}
/**
 * @since 0.2.0
 */
export interface Interface extends Documentable {
  /**
   * @since 0.2.0
   */
  signature: string
}
/**
 * @since 0.2.0
 */
export interface Func extends Documentable {
  /**
   * @since 0.2.0
   */
  signature: string
}
/**
 * @since 0.2.0
 */
export interface Method extends Documentable {
  /**
   * @since 0.2.0
   */
  signature: string
}
/**
 * @since 0.2.0
 */
export interface Class extends Documentable {
  /**
   * @since 0.2.0
   */
  signature: string
  /**
   * @since 0.2.0
   */
  methods: Array<Method>
  /**
   * @since 0.2.0
   */
  staticMethods: Array<Method>
}
/**
 * @since 0.2.0
 */
export interface TypeAlias extends Documentable {
  /**
   * @since 0.2.0
   */
  signature: string
}
/**
 * @since 0.2.0
 */
export interface Constant extends Documentable {
  /**
   * @since 0.2.0
   */
  signature: string
}
/**
 * @since 0.2.0
 */
export interface Export extends Documentable {
  /**
   * @since 0.2.0
   */
  signature: string
}
/**
 * @since 0.2.0
 */
export interface Module {
  /**
   * @since 0.2.0
   */
  path: Array<string>
  /**
   * @since 0.2.0
   */
  description?: string
  /**
   * @since 0.2.0
   */
  interfaces: Array<Interface>
  /**
   * @since 0.2.0
   */
  typeAliases: Array<TypeAlias>
  /**
   * @since 0.2.0
   */
  functions: Array<Func>
  /**
   * @since 0.2.0
   */
  classes: Array<Class>
  /**
   * @since 0.2.0
   */
  constants: Array<Constant>
  /**
   * @since 0.2.0
   */
  exports: Array<Export>
  /**
   * @since 0.2.0
   */
  deprecated: boolean
}
